---
- hosts: all
#  become_user: stader
#  become_method: sudo

  become: true
  become_method: su

 # become: true
  gather_facts: yes

  vars:
    vars_files:
      - config.yml

  pre_tasks:
    - raw: apt-get install -y python-simplejson



  tasks:
    - name: Upgrade system
      apt: upgrade=dist update_cache=yes

    - name: Install nginx
      apt: name=nginx state=latest

    - name: Install PHP Packages
      apt: name={{ item  }} update_cache=yes state=latest
      loop: [ 'python3-pymysql', 'php7.3-fpm'  ]



    - name: Install Letsencrypt
      apt: 
        name: letsencrypt 
        state: latest

    - name: Create Letsencrypt directory
      file: name=/var/www/letsencrypt state=directory


    - name: Create Letsencrypt Live directory
      file: name=/etc/letsencrypt/live/ state=directory


    - name: Remove default nginx config
      file: name=/etc/nginx/sites-enabled/default state=absent


# Nginx Config
    - name: Install system nginx config
      template:
        src: templates/nginx.conf.j2
        dest: /etc/nginx/nginx.conf


    - name: Install nginx site for letsencrypt requests
      template:
        src: templates/nginx-http.j2
        dest: /etc/nginx/sites-enabled/http-{{ domain_name }}

    - name: Reload nginx to activate letsencrypt site
      service: 
        name: nginx 
        state: restarted




# Make Domain Directory
    - name: Create Domain Director
      file:
        path: /var/www/{{ domain_name }}
        owner: www-data
        group: www-data
        mode: 0775
        state: directory



# Create Letsencrypt Cert
    - name: Create letsencrypt certificate
      shell: letsencrypt certonly -n --webroot -w /var/www/letsencrypt -m {{ letsencrypt_email }} --agree-tos -d {{ domain_name }}
      args:
        creates: /etc/letsencrypt/live/{{ domain_name }}


    - name: Generate dhparams
      shell: openssl dhparam -out /etc/nginx/dhparams.pem 2048
      args:
        creates: /etc/nginx/dhparams.pem


    - name: Install nginx site for specified site
      template:
        src: templates/nginx-le.j2
        dest: /etc/nginx/sites-enabled/le-{{ domain_name }}


    - name: Reload nginx to activate specified site
      service: name=nginx state=restarted


    - name: Add letsencrypt cronjob for cert renewal
      cron:
        name: letsencrypt_renewal
        special_time: weekly
        job: letsencrypt --renew certonly -n --webroot -w /var/www/letsencrypt -m {{ letsencrypt_email }} --agree-tos -d {{ domain_name }} && service nginx reload


# Setup PHP info page

    - name: Setup PHP info Page
      template:
        src: "files/info.php.j2"
        dest: "/var/www/{{ domain_name }}/info.php"


    - name: Restart PHP
      service: 
        name: php7.3-fpm 
        state: restarted
